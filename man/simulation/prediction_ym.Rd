% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_dropout_study.R
\name{prediction_ym}
\alias{prediction_ym}
\title{Conditional mean imputation and selection-model fit for MNAR analysis}
\usage{
prediction_ym(Data, fm2, X, Z, cor.type = "UNC")
}
\arguments{
\item{Data}{data.frame in long format with at least the columns
\code{Subject}, \code{Var1} (outcome, possibly with \code{NA}), \code{R}
(indicator: \code{1} = missing, \code{0} = observed), \code{week} (visit
time), and \code{treat}/\code{drug} (treatment assignment).}

\item{fm2}{fitted mixed-effects model object whose variance components can be
queried via \code{VarCorr()} and residual scale via \code{sigma}; e.g., an
\code{lme4::lmer} object. The function extracts a 2Ã—2 random-effect
covariance \eqn{D} and builds subject-specific blocks \eqn{Z_i D Z_i^\top}.}

\item{X}{numeric matrix, fixed-effects design for all stacked rows in
\code{Data} (row order must match \code{Data}); columns must be conformable
with \code{fixef(fm2)}.}

\item{Z}{numeric matrix, random-effects design for all stacked rows (row
order must match \code{Data}); the number of columns must equal \code{q}.}

\item{cor.type}{character scalar, correlation structure label passed to
\code{cor.fn()} for the within-subject residual correlation (default
\code{"UNC"}). Other values depend on the implementation of
\code{cor.fn()} (e.g., AR(1), compound symmetry).}
}
\value{
A named list with:
\describe{
\item{alpha.hat}{numeric vector of logistic-regression coefficients for the
selection model (\code{glm} on \code{R}).}
\item{yc}{numeric vector equal to \code{Data$Var1} with missing entries
replaced by their conditional means \eqn{\hat y_m}.}
}
}
\description{
Computes the conditional expectations of missing outcomes under a linear
mixed-effects model and then fits a selection (logistic) model on the
reconstructed dataset. Specifically, given a fitted mixed model \code{fm2}
and design matrices \code{X}, \code{Z}, the function forms subject-level
covariance blocks, derives the conditional mean
\eqn{\mathbb{E}(y_m \mid y_o)} to impute \eqn{y_m}, and fits
\code{glm(R ~ drug + fData.i + bData.i, family = binomial)} to obtain
selection-model coefficients.
}
\details{
Let \eqn{y = (y_o^\top, y_m^\top)^\top} be the stacked outcome, with
\eqn{y_o} observed and \eqn{y_m} missing. For subject \eqn{i}, the marginal
covariance is \eqn{\Lambda_i = Z_i D Z_i^\top + \sigma\,\Sigma_i(\phi)},
where \eqn{D} comes from \code{VarCorr(fm2)}, \eqn{\sigma = sigma(fm2)}, and
\eqn{\Sigma_i(\phi)} is returned by \code{cor.fn(Phi, ...)} with a scalar
parameter \eqn{\phi} (drawn here via \code{runif(1)}). The function assembles
a block-diagonal \eqn{\Lambda} over subjects and partitions it into
\eqn{\Lambda_{oo}}, \eqn{\Lambda_{mo}}, \eqn{\Lambda_{mm}} according to the
observed/missing pattern in \code{Data$Var1}. The conditional mean used to
impute the missing entries is
\deqn{ \hat y_m = X_m \beta \;+\; \Lambda_{mo}\,\Lambda_{oo}^{-1}\,(y_o - X_o \beta). }

After imputation, the function builds a per-visit selection design
\eqn{V = [1,\ \texttt{drug},\ \text{lag}(y),\ y]} via an internal helper
\code{V.fun()}, where \code{lag(y)} uses 0 as the first lag, and fits a
logistic regression of \code{R} on \code{drug}, \code{lag(y)}, and \code{y}.

\strong{Implementation notes.}
\itemize{
\item The code assumes two random effects (\eqn{q = 2}) and accesses
elements of \code{VarCorr(fm2)} accordingly.
\item The following objects are expected to exist in the calling scope:
\code{q} (number of random effects), \code{ga} (parameter for
\code{cor.fn()}), \code{cor.fn()} (residual correlation function),
and \code{vech.posi()} (used to define indices; not returned).
\item If there is exactly one missing entry (\code{num.na == 1}), the code
adjusts dimensions by transposing intermediate blocks.
}
}
